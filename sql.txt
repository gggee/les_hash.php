DELIMITER $$
CREATE TRIGGER hash_passw_update
BEFORE UPDATE ON users
FOR EACH ROW
BEGIN 
	SET NEW.password = SHA1(CONCAT(NEW.salt, MD5(NEW.password)));
    SET NEW.salt = OLD.salt;
END $$

ALTER TABLE users ADD COLUMN userGroup VARCHAR(255) NOT NULL DEFAULT 'user';

ALTER TABLE logs ADD COLUMN groupId VARCHAR(255) NOT NULL DEFAULT 'user';

ALTER TABLE actions ADD COLUMN permission VARCHAR(255) NOT NULL DEFAULT 'partial';


$userGroup = isset($_POST['userGroup']) ? $_POST['userGroup'] : 'user';
$sql = "INSERT INTO users (salt, email, password, customerId, userGroup) VALUES (?, ?, ?, ?, ?)";
$params = array($salt, $_POST["email"], $hashedPassword, $_POST["customerId"], $userGroup);

function logAuthentication($userId, $userGroup) {
    $actionId = getActionIdByName("Authentication");
    if (checkPermission($actionId, $userGroup)) {
        logAction($userId, $actionId, $userGroup);
    }
}

function logFormSubmission($userId, $userGroup) {
    $actionId = getActionIdByName("Form Submission");
    if (checkPermission($actionId, $userGroup)) {
        logAction($userId, $actionId, $userGroup);
    }
}

function logAction($userId, $actionId, $userGroup) {
    $groupId = getUserGroupId($userId);
    $pdo = getPDO();
    $sql = "INSERT INTO logs (userId, idAction, datetime, groupId) VALUES (?, ?, NOW(), ?)";
    $params = array($userId, $actionId, $groupId);
    $result = $pdo->prepare($sql);
    $result->execute($params);
}

function checkPermission($actionId, $userGroup) {
    $pdo = getPDO();
    $sql = "SELECT permission FROM actions WHERE idAction = ?";
    $params = array($actionId);
    $result = $pdo->prepare($sql);
    $result->execute($params);
    $row = $result->fetch(PDO::FETCH_ASSOC);
    if ($row) {
        return $row["permission"] === 'full' || ($row["permission"] === 'partial' && $userGroup !== 'admin');
    }
    return false;
}

function getUserGroupId($userId) {
    $pdo = getPDO();
    $sql = "SELECT userGroup FROM users WHERE userId = ?";
    $params = array($userId);
    $result = $pdo->prepare($sql);
    $result->execute($params);
    $row = $result->fetch(PDO::FETCH_ASSOC);

    if ($row) {
        return $row["userGroup"];
    }
    return 'user';
}

